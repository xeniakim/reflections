How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Using FC keyword, it helps finding different place in the texts of differen
    t versions.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    As doing version control, it is possible to check what I coded before and 
    compare or review. With stacked files, we can look back and go forward.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    When manually choosing time to commit, commits can reflect what they contai
    n well. So it makes easy to read and use those. When automatically saved, we can't select time to commit by logical changing point. But it helps preserving files safe by preparation for unexpected accidents or just forgetting.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    When making apps, there are many files in work projects. Those files are interrelated to each other and operate.

How can you use the commands git log and git diff to view the history of files?

    Using command git log, I can find commits that I need by searching by 
    comments on the commits. And using command git diff, I can compare two 
    versions of file.

How might using version control make you more confident to make changes that
could break something?

    Using command git checkout, I can go past point that were not bugs. Also
    I can know about what modification of file caused bugs.

Now that you have your workspace set up, what do you want to try using Git for?

    I'll use git for making android apps!
